<UserControl x:Class="Heart.Outward.ModuleTreeExt"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Heart.Outward"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <!--TreeViewItem默认样式-->
            <Style  x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}" >
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <DockPanel LastChildFill="True" >
                                <Canvas Margin="10,0,0,0"  Background="LightGray"  Width="1" DockPanel.Dock="Left" />
                                <StackPanel  >
                                    <Canvas x:Name="Bd" Background="{TemplateBinding Background}"  VerticalAlignment="Center" 
                                            Height="30"     UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Grid  VerticalAlignment="Center" Height="{Binding ElementName=Bd,  Path=Height}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="18" Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <!--展开收缩按钮-->
                                            <ToggleButton x:Name="ExpanderBtn"  Margin="-10,0,0,0"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" >
                                                <ToggleButton.Template>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border>
                                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </ToggleButton.Template>
                                                <ToggleButton.Content>
                                                    <Image  x:Name="ExpanderIcon"  Width="20" Height="20" Margin="-10,0,0,0">
                                                    </Image>
                                                </ToggleButton.Content>
                                            </ToggleButton>
                                            <!--内容-->
                                            <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>

                                        <Canvas Name="topLine"  Canvas.Left="13"  Canvas.Top="0" Height="1"  Background="LightGray"
                                                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Width}"  />
                                        <!--只有最顶级window才是最宽的-->
                                        <Canvas Name="bottomLine"  Canvas.Left="-1"  Canvas.Top="{Binding ElementName=Bd,  Path=Height}"
                                                Height="{Binding DragOverHeight}" Background="LightGray"  Margin="{Binding LastNodeMargin}"
                                                 Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Width}" />
                                        <Grid Width="90" Canvas.Top="0" Canvas.Right="0"  Margin="-100,0,0,0" VerticalAlignment="Center" Height="{Binding ElementName=Bd,  Path=Height}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="25"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock TextAlignment="Right"  Grid.Column="0" Text="{Binding CostTime}"  VerticalAlignment="Center" FontSize="12" Foreground="Gray" 
                                                           FontStyle="Italic" />
                                            <!-- 运行状态  只有一个能同时存在-->
                                            <Image  Grid.Column="1" Name="stateImg"  Source="{Binding StateImage}" Width="18" Height="18"  />
                                        </Grid>
                                    </Canvas>
                                    <ItemsPresenter Margin="3,0,0,0" x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </StackPanel>
                            </DockPanel>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ExpanderIcon" Property="Source" Value="pack://application:,,,/Heart;component/Icon/collapse.png" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ExpanderIcon" Property="Source" Value="pack://application:,,,/Heart;component/Icon/expand.png" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="ExpanderIcon" Property="Visibility" Value="Hidden" />
                                </Trigger>

                                <DataTrigger Binding="{Binding IsFirstNode}" Value="true">
                                    <Setter TargetName="topLine" Property="Canvas.Left" Value="-1"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsHideExpanded}"   Value="true">
                                    <Setter TargetName="ExpanderBtn" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsUse}" Value="false">
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                    <Setter  Property="Background" Value="LightGray"/>
                                    <Setter  TargetName="PART_Header"  Property="Opacity" Value="0.5"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsRunning}" Value="true">
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                    <Setter Property="Background" Value="LightCyan"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding InSelected}" Value="true">
                                    <Setter Property="Background" Value="LightSkyBlue" />
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding OverSelected}" Value="true">
                                    <Setter Property="Background" Value="LightGreen" />
                                    <Setter TargetName="topLine"  Property="Canvas.Left" Value="-1" />
                                </DataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TreeView样式-->
            <Style TargetType="{x:Type TreeView}">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItem}"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" VirtualizationMode="Recycling" Margin="0"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>
        <TreeView x:Name="_moduleTree" AllowDrop="True" FontSize="13" Drop="TreeView_Drop" DragOver="TreeView_DragOver" DragLeave="TreeView_DragLeave" MouseMove="TreeView_MouseMove" GiveFeedback="TreeView_GiveFeedback" PreviewMouseLeftButtonUp="TreeView_PreviewMouseLeftButtonUp" PreviewMouseLeftButtonDown="TreeView_PreviewMouseLeftButtonDown" PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown" PreviewMouseUp="TreeView_PreviewMouseUp" PreviewMouseDoubleClick="Tree_PreviewMouseDoubleClick">
            <TreeView.ItemTemplate >
                <HierarchicalDataTemplate ItemsSource="{Binding Children}"  >
                    <StackPanel Orientation="Horizontal"  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Width}" >
                        <Image Source="{Binding IconImage}" Width="18" Height="18"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0">
                                <TextBlock  Text="{Binding EntryName}" Margin="10,0,0,0" VerticalAlignment="Center" Foreground="{Binding ModuleForeground}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>
