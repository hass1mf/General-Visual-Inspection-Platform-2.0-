<hin:ModuleFormBase x:Class="Plugin.VariableDefine.ModuleForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hin="clr-namespace:Heart.Inward;assembly=Heart"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Plugin.VariableDefine"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <!--<Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime" />
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>-->
        
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition  Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <DataGrid x:Name="_dataGrid" Grid.Column="0" CanUserSortColumns="False" ItemsSource="{Binding}" AutoGenerateColumns="False" SelectionUnit="FullRow" SelectionMode="Single" MouseDoubleClick="_dataGrid_MouseDoubleClick" CellEditEnding="_dataGrid_CellEditEnding" MouseDown="_dataGrid_MouseDown">
                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                    <Style x:Key="DataGridTextColumnCenterSytle" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell"  BasedOn="{StaticResource MaterialDesignDataGridCell}">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="   类型   " Width="Auto" IsReadOnly="True" Binding="{Binding vType}" ElementStyle="{StaticResource DataGridTextColumnCenterSytle}"/>
                    <DataGridTextColumn Header="    名称    " Width="Auto" IsReadOnly="True" Binding="{Binding vName}" ElementStyle="{StaticResource DataGridTextColumnCenterSytle}"/>
                    <DataGridTextColumn Header="           表达式           " Width="Auto" IsReadOnly="True" Binding="{Binding vExpression}"  ElementStyle="{StaticResource DataGridTextColumnCenterSytle}"/>
                    <DataGridTextColumn Header="     计算结果     " Width="Auto" IsReadOnly="True" Binding="{Binding vValue}"  ElementStyle="{StaticResource DataGridTextColumnCenterSytle}"/>
                    <DataGridTextColumn Header="                   备注                   " Width="Auto" IsReadOnly="True" Binding="{Binding vRemark}" ElementStyle="{StaticResource DataGridTextColumnCenterSytle}"/>
                </DataGrid.Columns>

            </DataGrid>
            <Grid Background="AliceBlue" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Button Name="_buttonAddInt" Content="添加 Int" Margin="0,50,0,0"  Padding="0,0,0,0" Width="100" Height="25" FontSize="14" VerticalAlignment="Top" Click="_buttonAddInt_Click"/>
                <Button Name="_buttonAddDouble" Content="添加 Double" Margin="0,90,0,0"  Padding="0,0,0,0" Width="100" Height="25" FontSize="14" VerticalAlignment="Top" Click="_buttonAddDouble_Click"/>
                <Button Name="_buttonAddString" Content="添加 String" Margin="0,130,0,0"  Padding="0,0,0,0" Width="100" Height="25" FontSize="14" VerticalAlignment="Top" Click="_buttonAddString_Click"/>
                <Button Name="_buttonAddBool" Content="添加 Bool" Margin="0,170,0,0"  Padding="0,0,0,0" Width="100" Height="25" FontSize="14" VerticalAlignment="Top" Click="_buttonAddBool_Click"/>
                <Button Name="_buttonDelete" Content="删除" Margin="0,260,0,0"  Padding="0,0,0,0" Width="100" Height="25" FontSize="14" VerticalAlignment="Top" Click="_buttonDelete_Click"/>
            </Grid>
        </Grid>
        <hin:ModuleFormBaseControl x:Name="_baseControl" Grid.Row="1" RunBtnVisibility="Visible"  />
    </Grid>
</hin:ModuleFormBase>
