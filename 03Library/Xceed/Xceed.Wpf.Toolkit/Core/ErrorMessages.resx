<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnimationAccelerationRatioOOR" xml:space="preserve">
    <value>AnimationAccelerationRatio must be between 0.0 and 1.0.</value>
  </data>
  <data name="AnimationDecelerationRatioOOR" xml:space="preserve">
    <value>AnimationDecelerationRatio must be between 0.0 and 1.0.</value>
  </data>
  <data name="AnimationStateNeedsHelper" xml:space="preserve">
    <value>ItemAnimationState can only be used once the animation helper has been assigned</value>
  </data>
  <data name="CannotConvertBackToRange" xml:space="preserve">
    <value>Cannot convert back to a range.</value>
  </data>
  <data name="ContainerModelAlreadyRemoved" xml:space="preserve">
    <value>Container model was already removed from children collection.</value>
  </data>
  <data name="DefaultAnimationRateAnimationRateDefault" xml:space="preserve">
    <value>The DefaultAnimationRate property cannot be set to AnimationRate.Default.  It must have a valid AnimationRate value.</value>
  </data>
  <data name="DefaultAnimatorCantAnimate" xml:space="preserve">
    <value>The DefaultAnimator cannot actually be used for animation.</value>
  </data>
  <data name="DefaultAnimatorIterativeAnimationDefault" xml:space="preserve">
    <value>The DefaultAnimator property cannot be set to IterativeAnimation.Default.  It must be a valid IterativeAnimator value or null.</value>
  </data>
  <data name="EndAngleCannotBeSetDirectlyInSlice" xml:space="preserve">
    <value>The EndAngle property cannot be set directly while a Pie's Mode is Slice. You must set the Slice property instead.</value>
  </data>
  <data name="GlassEnabledNeedsFullTrust" xml:space="preserve">
    <value>GlassEnabled can be set only in Full Trust enviornments</value>
  </data>
  <data name="InvalidRatePropertyAccessed" xml:space="preserve">
    <value>Unable to return a {0} value for an AnimationRate value of '{1}'. This AnimationRate is represented as a {2} value.</value>
  </data>
  <data name="ItemMustBeAVisual" xml:space="preserve">
    <value>item must be a Visual</value>
  </data>
  <data name="ItemMustBeMode3DOrVisual3D" xml:space="preserve">
    <value>item must be either a Model3D or a Visual3D.</value>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>The method or operation is not implemented.</value>
  </data>
  <data name="NegativeSpeedNotSupported" xml:space="preserve">
    <value>Speed must be greater than or equal to zero.</value>
  </data>
  <data name="NegativeTimeSpanNotSupported" xml:space="preserve">
    <value>Duration (TimeSpan) must be greater than or equal to zero.</value>
  </data>
  <data name="OperationNotSupported" xml:space="preserve">
    <value>Operation not supported on the platform</value>
  </data>
  <data name="OrderedItemsNeedEveryVisible" xml:space="preserve">
    <value>orderedItems must contain every item in the visible items.</value>
  </data>
  <data name="PositionOnlyAccessibleOnAbsolute" xml:space="preserve">
    <value>The Position property can only be accessed on an absolute view.</value>
  </data>
  <data name="RegionOnlyAccessibleOnRegionalView" xml:space="preserve">
    <value>The Region property can only be accessed on a region-based view.</value>
  </data>
  <data name="ScaleOnlyAccessibleOnAbsolute" xml:space="preserve">
    <value>The Scale property can only be accessed on an absolute view.</value>
  </data>
  <data name="SetNewToValueSetOnCompletedHelper" xml:space="preserve">
    <value>SetNewToValue set on a completed animation helper</value>
  </data>
  <data name="SliceCannotBeSetDirectlyInEndAngle" xml:space="preserve">
    <value>The Slice property cannot be set directly while a Pie's Mode is EndAngle. You must set the EndAngle property instead.</value>
  </data>
  <data name="SliceOOR" xml:space="preserve">
    <value>Slice must be between 0.0 and 1.0.</value>
  </data>
  <data name="SuppliedValueWasNotBool" xml:space="preserve">
    <value>Error converting from bool value to Visibility value. Supplied value was not of type bool.</value>
  </data>
  <data name="SuppliedValueWasNotVisibility" xml:space="preserve">
    <value>Error converting from Visibility value to bool value. Supplied value was not of type Visibility.</value>
  </data>
  <data name="ToAndFromMatrixAreEqual" xml:space="preserve">
    <value>To and from matrix are equal</value>
  </data>
  <data name="UnableToConvertToZoomboxView" xml:space="preserve">
    <value>Unable to convert object '{0}' to ZoomboxView.</value>
  </data>
  <data name="ValueToConvertMustBeNumber" xml:space="preserve">
    <value>Value to convert must be a number.</value>
  </data>
  <data name="ViewModeInvalidForSource" xml:space="preserve">
    <value>The ViewStackMode must be Default or Manual while ViewStackSource is in use.</value>
  </data>
  <data name="ViewStackCannotBeManipulatedNow" xml:space="preserve">
    <value>The ViewStack cannot be directly manipulated. Operation is not valid while ViewStackSource is in use. Access and modify members of the Zoombox.ViewStackSource instead.</value>
  </data>
  <data name="VisibleMustEqualOrdered" xml:space="preserve">
    <value>VisibleItemCount and orderedItems count must be equal.</value>
  </data>
  <data name="ZoomboxContentMustBeUIElement" xml:space="preserve">
    <value>The Content property of a Zoombox control must specify a UIElement.</value>
  </data>
  <data name="ZoomboxHasViewFinderButNotDisplay" xml:space="preserve">
    <value>The Zoombox template contains a ViewFinder element but it does not contain a ZoomboxViewFinderDisplay element</value>
  </data>
  <data name="ZoomboxTemplateNeedsContent" xml:space="preserve">
    <value>The Zoombox template does not contain a content presenter.</value>
  </data>
  <data name="ZoomboxViewAlreadyInitialized" xml:space="preserve">
    <value>The ZoomboxView instance is already initialized for a different type of view: {0}</value>
  </data>
</root>